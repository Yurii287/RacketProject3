147:  Contribute individually to the code of an end-of-block project and discuss your contribution,
      explaining the code in detail and answering questions about it. This SOB requires the completion of the 
      equivalent threshold SOB on a *different* project

152:  Demonstrate a simple understanding of object-oriented programming in 
      Racket by defining classes, objects and applying methods.

131:  Demonstrate an understanding of design approaches such as top-down design and iterative design. 

133:  Discuss the respective advantages and disadvantages of different data structures, 
      justifying choices for particular problems. 
128: For a given Racket program (either one provided or one you have written), produce a list of test cases to test it. Explain the choice of test cases. 

112: Demonstrate a clear awareness of the importance of user interface design issues, and how they can be addressed systematically in a design project.  

101: Use lists and associated functions to represent and solve simple problems in Racket. 

102: Write a simple recursive function to carry out a well-defined task over lists or integers, test the function and explain how it works. 
