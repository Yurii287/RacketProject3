(define no-pen (new pen% [style 'transparent]))
(define no-brush (new brush% [style 'transparent]))
(define blue-brush (new brush% [color "green"]))
(define yellow-brush (new brush% [color "yellow"]))
(define red-pen (new pen% [color "red"] [width 2]))
(define frame (new frame% [label "Easy Access TFL"]
                   [alignment '(left top)]
                   [stretchable-width #f]	 
                   [stretchable-height #f]
                   [min-width 800]	 
                   [min-height 600]))

(define canvas (new canvas%
                           (parent frame)
                           
                           (label "Editor Canvas")
                           (paint-callback (lambda (canvas dc) 
            (send dc clear)
                
                
                
                ))))

(define key-event(new key-event% [key-code #\tab]
                      ))
(cond ((equal? (send frame on-subwindow-char frame	 	 	 	 
 	 	key-event) #t) (display "wooooooooooooooooo")))
(define dc (send canvas get-dc))
(send frame show #t)
(sleep/yield 1)
(send dc clear)
(define move(Î» (x y) (send dc set-pen no-pen)
  (send dc set-brush blue-brush)
  (send dc draw-ellipse x y 100 100)))
(move 0 0)
(sleep/yield 1)
(send dc clear)
(move 100 100)
(define stringy(make-object string-snip% 0)  )
(struct current_pos(x y)  #:mutable )
(define positon(current_pos 200 200))
(new button% [parent frame]
             [label "Click Me"]
       
             ; Callback procedure for a button click:
             [callback (lambda (button event)
                        (sleep/yield 0.1)(send dc clear)(move (current_pos-x positon) (current_pos-y positon)))])

;
